
    
     <BehaviorTree>
        <Sequence>
          <Selector>
            <Sequence>
              <Condition>is_target_detected</Condition>
              <Action>change_color_to_green</Action>
              <Action>task_completed</Action>
            </Sequence>
            <Action>wander</Action>
          </Selector>
          <Sequence>
            <Condition>is_agent_in_nest</Condition>
            <Action>change_color_to_white</Action>
          </Sequence>
        </Sequence>
      </BehaviorTree>


#######



     <BehaviorTree>
        <Sequence>
          <Selector>
            <Sequence>
              <Condition>is_target_detected</Condition>
              <Action>change_color_to_green</Action>
              <Action>task_completed</Action>
            </Sequence>
            <Action>wander</Action>
          </Selector>
          <Sequence>
            <Condition>is_agent_in_nest</Condition>
            <Action>change_color_to_white</Action>
          </Sequence>
        </Sequence>
      </BehaviorTree>


#######




     <BehaviorTree>
        <Selector>
          <Sequence>
            <Condition>is_obstacle_detected</Condition>
            <Action>change_color_to_green</Action>
          </Sequence>
          <Sequence>
            <Condition>is_target_detected</Condition>
          </Sequence>
          <Sequence>
          </Sequence>
        </Selector>
      </BehaviorTree>


#######



     <BehaviorTree>
        <Sequence>
          <FormLine>Action node: Direct the agent to form a line towards the center of the window. This function adjusts the agent's position to align it with the center. Returns: True if the line is formed with the center, False otherwise.', 'is_line_formed': 'Condition node: Check if the agent has formed a line with a reference point at the center of the window.', 'change_color_to_green': 'Action node: Change the agent's color to green, usually indicating a successful operation or state.', 'task_completed': 'Action node: Signal that the agent has completed its designated task by freezing movement and updating state.', 'is_agent_in_nest': 'Condition node: Check if the agent is in the nest.', 'continue_movement_agent': 'Action node: Continue the agent's movement after it has been previously frozen.', 'is_target_reached': 'Condition node: Check if the agent has reached the target.', 'is_target_detected': 'Action node: Check if the target is within a detectable distance from the agent\'s position.', 'wander': 'Action node: Perform a wandering action where the agent moves randomly within the environment.', 'avoid_obstacle': 'Action node: Execute an action to avoid detected obstacles.', 'is_path_clear': 'Condition node: Check if the path ahead of the agent is clear of obstacles.', 'is_obstacle_detected': 'Condition node: Determine if any obstacles are detected in the vicinity of the agent.', 'agent_movement_freeze': 'Action node: Freeze the agent\'s movement, typically to indicate a stop in activity or end of tasks.'}, 'Form a line and check if the line formed then change color to green then freeze movement and end the task.'</FormLine>
          <Sequence>
            <Condition>is_agent_in_nest</Condition>
            <Action>change_color_to_green</Action>
          </Sequence>
          <Action>task_completed</Action>
        </Sequence>
      </BehaviorTree>


#######



    
     <BehaviorTree>
        <Sequence>
          <Action>change_color_to_green</Action>
          <Sequence>
            <Action>form_line</Action>
            <Condition>is_line_formed</Condition>
          </Sequence>
          <Action>change_color_to_white</Action>
        </Sequence>
      </BehaviorTree>


#######


     <BehaviorTree>
        <Sequence>
          <Action>form_line</Action>
          <Condition>is_line_formed</Condition>
        </Sequence>
      </BehaviorTree>




